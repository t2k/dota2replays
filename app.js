// Generated by CoffeeScript 1.7.1

/*
Module dependencies.
 */
var app, express, http, path, util;

express = require("express");

http = require("http");

path = require("path");

util = require("util");

app = express();

app.set("port", process.env.PORT || 3000);

app.set('views', './views');

app.set("view engine", "jade");

app.use(express.logger("dev"));

app.use(express.json());

app.use(express.urlencoded());

app.use(express.methodOverride());

app.use(express.cookieParser("your secret here"));

app.use(express.session());

app.use(app.router);

app.use(express["static"]('./public'));

if ("development" === app.get("env")) {
  app.use(express.errorHandler());
}

app.get("/", function(req, res) {
  return res.render('index');
});

app.get("/upload", function(req, res) {
  return res.send("<h1>Upload!</h1>");
});

app.post("/upload", function(req, res) {
  var form, multiparty;
  multiparty = require('multiparty');
  form = new multiparty.Form({
    autoFiles: true,
    uploadDir: "./tempUploads"
  });
  return form.parse(req, function(err, fields, files) {
    if (err) {
      res.writeHead(500, {
        "content-type": "text/plain"
      });
      res.send("ERROR: uploading\n\n");
    }
    console.log("upload handled", fields, files);
    return res.json(util.inspect({
      message: "upload complete",
      fields: fields,
      files: files
    }));
  });
});

http.createServer(app).listen(app.get("port"), function() {
  console.log("Express server listening on port " + app.get("port"));
});
